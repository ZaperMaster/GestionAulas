package com.alejandronieves.controller;

import com.alejandronieves.model.Aula;
import com.alejandronieves.model.Planta;
import com.alejandronieves.service.AulaService;
import com.alejandronieves.service.EdificioService;
import com.alejandronieves.service.PlantaService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping("/aulas")
public class AulaController {

    @Autowired
    private AulaService aulaService;

    @Autowired
    private EdificioService edificioService;

    @Autowired
    private PlantaService plantaService;

    // Listar aulas
    @GetMapping
    public String listarAulas(Model model) {
        List<Aula> aulas = aulaService.listAll();
        model.addAttribute("aulas", aulas);
        return "aula_list"; // Archivo aula_list.html en templates/
    }

    // Formulario para crear un nuevo Aula
    @GetMapping("/nuevo")
    public String nuevaAula(Model model) {
        model.addAttribute("aula", new Aula());
        model.addAttribute("edificios", edificioService.listAll());
        // Inicialmente, se puede dejar sin plantas; se actualizará vía AJAX
        model.addAttribute("plantas", null);
        return "aula_form";
    }

    // Procesar formulario de creación o actualización
    @PostMapping
    public String guardarAula(@ModelAttribute("aula") Aula aula, BindingResult result, Model model) {
        if (result.hasErrors()) {
            model.addAttribute("edificios", edificioService.listAll());
            // Si se produjo error, recarga las plantas si ya se seleccionó un edificio
            if (aula.getPlanta() != null && aula.getPlanta().getEdificio() != null) {
                model.addAttribute("plantas", plantaService.findByEdificio(aula.getPlanta().getEdificio().getId()));
            }
            return "aula_form";
        }
        aulaService.save(aula);
        return "redirect:/aulas";
    }

    // Mostrar formulario para editar un Aula existente
    @GetMapping("/editar/{id}")
    public String editarAula(@PathVariable("id") Long id, Model model) {
        Aula aula = aulaService.findById(id);
        if (aula == null) {
            return "redirect:/aulas";
        }
        model.addAttribute("aula", aula);
        model.addAttribute("edificios", edificioService.listAll());
        // Cargar las plantas correspondientes al edificio seleccionado (si hay)
        if (aula.getPlanta() != null && aula.getPlanta().getEdificio() != null) {
            model.addAttribute("plantas", plantaService.findByEdificio(aula.getPlanta().getEdificio().getId()));
        } else {
            model.addAttribute("plantas", null);
        }
        return "aula_form";
    }

    // Borrar un Aula
    @GetMapping("/borrar/{id}")
    public String borrarAula(@PathVariable("id") Long id) {
        aulaService.deleteById(id);
        return "redirect:/aulas";
    }

    // Endpoint AJAX para obtener plantas por edificio
    @GetMapping("/plantasPorEdificio")
    @ResponseBody
    public List<Planta> getPlantasPorEdificio(@RequestParam("edificioId") Long edificioId) {
        return plantaService.findByEdificio(edificioId);
    }

}
